name: build

on:
  push:
    branches: [main]         # Run test_and_lint on main pushes
    tags: ['v*.*.*']         # Also allow tag pushes (for publish job)
  pull_request:
    branches: [main]         # Run test_and_lint on PRs targeting main
  workflow_dispatch:         # Optional: manual trigger support

jobs:
  tests:
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    name: Running for ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout source
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: 📦 Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}

      - name: 📥 Install dependencies
        run: |
          poetry install --no-interaction

      - name: 🧪 Run tests
        run: |
          if [ "${{ matrix.python-version }}" = "3.12" ]; then
            poetry run pytest --cov=reflexsive --cov-config=pyproject.toml --cov-report=xml
            poetry run genbadge coverage -i coverage.xml -o coverage.svg
          else
            poetry run pytest
          fi
          
      - name: 🔍 Run type checks with mypy
        run: poetry run mypy src/reflexsive

      - name: 🚀 Push badge to `badges` branch
        if: matrix.python-version == '3.12'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Clone badges branch separately
          git clone --depth=1 --branch=badges https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} badge-repo
          mv coverage.svg badge-repo/coverage.svg

          cd badge-repo
          git add coverage.svg
          git commit -m "Update coverage badge [skip ci]" || echo "No changes to commit"
          git push origin badges

  publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/tags/v')
    environment: pypi

    steps:
      - name: 🛎️ Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: 🔌 Install Poetry Plugins
        run: |
          poetry self add poetry-dynamic-versioning[plugin]

      - name: 🏗️ Build with Poetry
        run: poetry build

      - name: 🔍 Validate metadata
        run: poetry run twine check dist/*

      - name: 🚀 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
